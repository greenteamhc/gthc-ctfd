services:
  ctfd:
    build: .
    user: root
    restart: always
    ports:
      - "8000:8000"  # Mantém a porta 8000 mapeada para o container CTFd
    environment:
      - SECRET_KEY=.ctfd_secret_key
      - UPLOAD_FOLDER=/var/uploads
      - DATABASE_URL=mysql+pymysql://ctfd:ctfd@db/ctfd
      - REDIS_URL=redis://cache:6379
      - WORKERS=1
      - LOG_FOLDER=/var/log/CTFd
      - ACCESS_LOG=-
      - ERROR_LOG=-
      - REVERSE_PROXY=true
      - URL_PREFIX=/ctf  # Adiciona o prefixo /ctf para que a aplicação saiba que deve trabalhar sob esse caminho
    volumes:
      - .data/CTFd/logs:/var/log/CTFd
      - .data/CTFd/uploads:/var/uploads
      - .:/opt/CTFd:ro
    depends_on:
      - db
    networks:
      default:
      internal:

  nginx:
    image: nginx:stable
    restart: always
    volumes:
      - ./conf/nginx/http.conf:/etc/nginx/nginx.conf  # Monta o arquivo http.conf na configuração correta do Nginx dentro do Docker
    ports:
      - "8080:80"  # Mapeia a porta 8080 no host para a porta 80 no container do Nginx
    depends_on:
      - ctfd
    networks:
      default:
      internal:

  db:
    image: mariadb:10.11
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=ctfd
      - MARIADB_USER=ctfd
      - MARIADB_PASSWORD=ctfd
      - MARIADB_DATABASE=ctfd
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - .data/mysql:/var/lib/mysql
    networks:
      internal:
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]

  cache:
    image: redis:4
    restart: always
    volumes:
      - .data/redis:/data
    networks:
      internal:

networks:
  default:
  internal:
    internal: true

